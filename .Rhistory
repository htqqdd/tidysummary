"group" %in% c("group", "A")
c("group", "A") %in% "group"
library(usethis)
use_package("tidyverse")
use_package("dplyr")
use_package("tidyr")
use_package("tibble")
use_package("cli")
use_package("stats")
use_package("ggplot2")
use_package("car")
use_mit_license("Li Xiang")
use_package("rlang")
library(tidysummary)
data <- readRDS("D:/metabo_proteo/比对及质控/metabo/ukb_i0.rds")
result <- data %>%
add_var(group = "baseline_AF") %>%
add_summary(add_overall = T,
norm_continuous_format = "{mean} ± {SD}",
unnorm_continuous_format = "{median} ({Q1}, {Q3})",
categorical_format = "{n} ({pct})",
binary_show = "all",
digit = 2) %>%
add_p(digit = 3, asterisk = T)
library(dplyr)
result <- data %>%
add_var(group = "baseline_AF") %>%
add_summary(add_overall = T,
norm_continuous_format = "{mean} ± {SD}",
unnorm_continuous_format = "{median} ({Q1}, {Q3})",
categorical_format = "{n} ({pct})",
binary_show = "all",
digit = 2) %>%
add_p(digit = 3, asterisk = T)
browser()
result <- data %>%
add_var(group = "baseline_AF")
data <- data[,c("age", "BMI", "baseline_AF")]
View(data)
group_var <- "baseline_AF"
dplyr::group_by(!!sym(group_var)) %>%
dplyr::summarise(
p.value = {
tryCatch(moments::agostino.test(.data[[var]])$p.value, error = function(e) NA)
},
.groups = "drop"
) %>%
tibble::deframe()
group_var <- "baseline_AF"
dplyr::group_by(!!sym(group_var)) %>%
dplyr::summarise(
p.value = {
tryCatch(moments::agostino.test(.data[[var]])$p.value, error = function(e) NA)
},
.groups = "drop"
) %>%
tibble::deframe()
group_var <- "baseline_AF"
dplyr::group_by(!!ralng::sym(group_var)) %>%
dplyr::summarise(
p.value = {
tryCatch(moments::agostino.test(.data[[var]])$p.value, error = function(e) NA)
},
.groups = "drop"
) %>%
tibble::deframe()
group_var <- "baseline_AF"
dplyr::group_by(!!rlang::sym(group_var)) %>%
dplyr::summarise(
p.value = {
tryCatch(moments::agostino.test(.data[[var]])$p.value, error = function(e) NA)
},
.groups = "drop"
) %>%
tibble::deframe()
group_var <- "baseline_AF"
dplyr::group_by(.data[[group_var]]) %>%
dplyr::summarise(
p.value = {
tryCatch(moments::agostino.test(.data[[var]])$p.value, error = function(e) NA)
},
.groups = "drop"
) %>%
tibble::deframe()
View(data)
result <- data %>%
dplyr::group_by(!!rlang::sym(group_var)) %>%
dplyr::summarise(
p.value = {
tryCatch(moments::agostino.test(.data[[var]])$p.value, error = function(e) NA)
},
.groups = "drop"
) %>%
tibble::deframe()
var = "BMI"
data <- data[,c("age", "BMI", "baseline_AF")]
group_var <- "baseline_AF"
result <- data %>%
dplyr::group_by(!!rlang::sym(group_var)) %>%
dplyr::summarise(
p.value = {
tryCatch(moments::agostino.test(.data[[var]])$p.value, error = function(e) NA)
},
.groups = "drop"
) %>%
tibble::deframe()
class(data$baseline_AF)
moments::agostino.test(data[data$baseline_AF == T, "BMI", drop = FALSE])
View(data)
moments::agostino.test(data[data$baseline_AF == T, "age", drop = FALSE])
data[data$baseline_AF == T, "age", drop = FALSE]
AF = data[data$baseline_AF == T,]
moments::agostino.test(AF$age)
non_AF = data[data$baseline_AF == F,]
moments::agostino.test(non_AF$age)
ad.test(non_AF$age)
nortest::ad.test(non_AF$age)
dagoTest(non_AF$age)
fBasics::dagoTest(non_AF$age)
result <- fBasics::dagoTest(non_AF$age)
View(result)
non_AF <- non_AF[sample(rownames(non_AF), 50000),]
result <- fBasics::dagoTest(non_AF$age)
non_AF <- non_AF[sample(rownames(non_AF), 40000),]
result <- fBasics::dagoTest(non_AF$age)
View(result)
non_AF = data[data$baseline_AF == F,]
non_AF <- non_AF[sample(rownames(non_AF), 46340),]
result <- fBasics::dagoTest(non_AF$age)
View(result)
non_AF = data[data$baseline_AF == F,]
non_AF <- non_AF[sample(rownames(non_AF), 46341),]
result <- fBasics::dagoTest(non_AF$age)
result <- fBasics::dagoTest(non_AF$age)
View(result)
non_AF <- non_AF[sample(rownames(non_AF), 46340),]
result <- fBasics::dagoTest(non_AF$age)
View(result)
result$test$p.value
result@test$p.value
result@test$p.value[1]
use_package("nortest")
use_package("fBasics")
non_AF = data[data$baseline_AF == F,]
result <- ad.test(non_AF$age)
result <- nortest::ad.test(non_AF$age)
View(result)
result$p.value
library(tidysummary)
library(dplyr)
data <- readRDS("D:/metabo_proteo/比对及质控/metabo/ukb_i0.rds")
result <- data %>%
add_var(group = "baseline_AF")
library(tidysummary)
library(dplyr)
data <- readRDS("D:/metabo_proteo/比对及质控/metabo/ukb_i0.rds")
result <- data %>%
add_var(group = "baseline_AF")
library(tidysummary)
library(dplyr)
data <- readRDS("D:/metabo_proteo/比对及质控/metabo/ukb_i0.rds")
result <- data %>%
add_var(group = "baseline_AF")
View(result)
result <- result %>%
add_summary(add_overall = T,
norm_continuous_format = "{mean} ± {SD}",
unnorm_continuous_format = "{median} ({Q1}, {Q3})",
categorical_format = "{n} ({pct})",
binary_show = "all",
digit = 2)
class(result)
library(tidysummary)
library(dplyr)
data <- readRDS("D:/metabo_proteo/比对及质控/metabo/ukb_i0.rds")
result <- data %>%
add_var(group = "baseline_AF")
class(result)
result <- result %>%
add_summary(add_overall = T,
norm_continuous_format = "{mean} ± {SD}",
unnorm_continuous_format = "{median} ({Q1}, {Q3})",
categorical_format = "{n} ({pct})",
binary_show = "all",
digit = 2)
gc()
library(tidysummary)
library(dplyr)
data <- readRDS("D:/metabo_proteo/比对及质控/metabo/ukb_i0.rds")
result <- data %>%
add_var(group = "baseline_AF")
class(result)
result <- result %>%
add_summary(add_overall = T,
norm_continuous_format = "{mean} ± {SD}",
unnorm_continuous_format = "{median} ({Q1}, {Q3})",
categorical_format = "{n} ({pct})",
binary_show = "all",
digit = 2)
digit = 2
!is.numeric(digit)
length(digit) != 1
digit < 0
digit != floor(digit)
#检查digit参数
if (!is.numeric(digit) || length(digit) != 1 || digit < 0 || digit != floor(digit)) {
cli::cli_alert_danger("'digit' must be a numeric value greater than or equal to 0")
stop()
}
if (!is.numeric(digit) || length(digit) != 1 || digit < 0 || digit != floor(digit)) {
cli::cli_alert_danger("'digit' must be a numeric value greater than or equal to 0")
stop()
}
sprintf(paste0("%.", digit, "f"), x)
library(tidysummary)
library(dplyr)
data <- readRDS("D:/metabo_proteo/比对及质控/metabo/ukb_i0.rds")
result <- data %>%
add_var(group = "baseline_AF")
class(result)
result <- result %>%
add_summary(add_overall = T,
norm_continuous_format = "{mean} ± {SD}",
unnorm_continuous_format = "{median} ({Q1}, {Q3})",
categorical_format = "{n} ({pct})",
binary_show = "all",
digit = 2)
rlang::last_trace()
#' Converts numeric values to character strings with fixed decimal formatting using `sprintf()`.
#'
#' @param x A numeric vector to format.
#' @param digit Number of decimal places to display, 0 by default.
#'
#' @return A character vector of formatted values.
#'
#' @examples
#' my_round(3.1415, 2)  # returns "3.14"
#' @export
my_round <- function(x, digit = 0) {
if (!is.numeric(digit) || length(digit) != 1 || digit < 0 || digit != floor(digit)) {
cli::cli_alert_danger("'digit' must be a numeric value greater than or equal to 0")
stop()
}
sprintf(paste0("%.", digit, "f"), x)
}
#'
#' @param x A numeric vector to format.
#' @param digit Number of decimal places to display, 0 by default.
#'
#' @return A character vector of formatted values.
#'
#' @examples
#' my_round(3.1415, 2)  # returns "3.14"
#' @export
#'
my_round(0.123, 3)
library(dplyr)
data <- readRDS("D:/metabo_proteo/比对及质控/metabo/ukb_i0.rds")
result <- data %>%
add_var(group = "baseline_AF")
class(result)
result <- result %>%
add_summary(add_overall = T,
norm_continuous_format = "{mean} ± {SD}",
unnorm_continuous_format = "{median} ({Q1}, {Q3})",
categorical_format = "{n} ({pct})",
binary_show = "all",
digit = 2)
View(summary)
gc()
library(dplyr)
data <- readRDS("D:/metabo_proteo/比对及质控/metabo/ukb_i0.rds")
result <- data %>%
add_var(group = "baseline_AF")
class(result)
result <- result %>%
add_summary(add_overall = T,
norm_continuous_format = "{mean} ± {SD}",
unnorm_continuous_format = "{median} ({Q1}, {Q3})",
categorical_format = "{n} ({pct})",
binary_show = "all",
digit = 2)
View(result)
View(result[["summary"]])
result <- result %>%
add_summary(add_overall = T,
norm_continuous_format = "{mean} ± {SD}",
unnorm_continuous_format = "{median} ({Q1}, {Q3})",
categorical_format = "{n} ({pct})",
binary_show = "last",
digit = 2)
View(result)
View(result[["summary"]])
result <- result %>%
add_p(digit = 3, asterisk = T)
result <- result %>%
add_p(digit = 3, asterisk = F)
data <- readRDS("D:/metabo_proteo/比对及质控/metabo/ukb_i0.rds")
result <- data %>%
add_var(group = "baseline_AF") %>%
add_summary(add_overall = T,
norm_continuous_format = "{mean} ± {SD}",
unnorm_continuous_format = "{median} ({Q1}, {Q3})",
categorical_format = "{n} ({pct})",
binary_show = "last",
digit = 2) %>%
add_p(digit = 3, asterisk = F)
use_package("glue")
library(usethis)
use_package("glue")
use_package("tidyselect")
use_package("stringr")
tools::showNonASCIIfile("R/add_p.R")
tools::showNonASCIIfile("R/add_p.R")
tools::showNonASCIIfile("R/add_summary.R")
library(dplyr)
data <- readRDS("D:/metabo_proteo/比对及质控/metabo/ukb_i0.rds")
result <- data %>%
add_var(group = "baseline_AF") %>%
add_summary(add_overall = T,
norm_continuous_format = "{mean} ± {SD}",
unnorm_continuous_format = "{median} ({Q1}, {Q3})",
categorical_format = "{n} ({pct})",
binary_show = "last",
digit = 2) %>%
add_p(digit = 3, asterisk = F)
View(result)
result <- data %>%
add_var(group = "baseline_AF", norm = T) %>%
add_summary(add_overall = T,
norm_continuous_format = "{mean} ± {SD}",
unnorm_continuous_format = "{median} ({Q1}, {Q3})",
categorical_format = "{n} ({pct})",
binary_show = "last",
digit = 2) %>%
add_p(digit = 3, asterisk = F)
result <- data %>%
add_var(group = "baseline_AF", norm = T) %>%
add_summary(add_overall = T,
norm_continuous_format = "{mean} ± {SD}",
unnorm_continuous_format = "{median} ({Q1}, {Q3})",
categorical_format = "{n} ({pct})",
binary_show = "last",
digit = 2) %>%
add_p(digit = 3, asterisk = F, add_method = T)
use_vignette("tidysummary", "tidysummary: A Elegant Approach to Summarizing Clinical Data")
library(usethis)
use_vignette("tidysummary", "tidysummary: A Elegant Approach to Summarizing Clinical Data")
library(pkgdown)
build_site()
library(pkgdown)
build_site()
library(usethis)
library(pkgdown)
build_site()
build_site()
clean_site()
build_site()
build_site()
set_proxy(T, 7897)
clean_site()
build_site()
